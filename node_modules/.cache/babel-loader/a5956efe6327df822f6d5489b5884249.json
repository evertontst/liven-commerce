{"ast":null,"code":"var _jsxFileName = \"/Users/evertonluis/jobs/liven-commerce/src/hooks/useCart.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext({});\nexport function CartProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState(() => {\n    const storagedCart = localStorage.getItem('@Liven:cart');\n\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n\n  const addProduct = async productId => {\n    try {\n      //Get cart\n      const updatedCart = [...cart]; //Check product productExists\n\n      const productExists = updatedCart.find(product => product.id === productId);\n      const currentAmount = productExists ? productExists.amount : 0;\n      const amount = currentAmount + 1;\n\n      if (productExists) {\n        productExists.amount = amount;\n      } else {\n        const product = await api.get(`/products/${productId}`);\n        const newProduct = { ...product.data,\n          amount: 1\n        };\n        updatedCart.push(newProduct);\n      }\n\n      setCart(updatedCart);\n      localStorage.setItem('@Liven:cart', JSON.stringify(updatedCart));\n    } catch (error) {\n      toast.error('Erro na adição do produto');\n    }\n  };\n\n  const removeProduct = productId => {\n    try {\n      const updatedCart = [...cart];\n      const productIndex = updatedCart.findIndex(product => product.id === productId);\n\n      if (productIndex >= 0) {\n        updatedCart.splice(productIndex, 1);\n        setCart(updatedCart);\n        localStorage.setItem('@Liven:cart', JSON.stringify(updatedCart));\n      } else {\n        throw Error();\n      }\n\n      localStorage.removeItem(JSON.stringify(productId));\n    } catch {\n      toast.error('Erro na remoção do produto');\n    }\n  };\n\n  const updateProductAmount = async _ref2 => {\n    let {\n      productId\n    } = _ref2;\n\n    try {\n      const updatedCart = [...cart];\n      const productExists = updatedCart.find(product => product.id === productId);\n\n      if (productExists) {\n        productExists.amount = amount;\n        setCart(updatedCart);\n        localStorage.setItem('@Liven:cart', JSON.stringify(updatedCart));\n      } else {\n        throw Error();\n      }\n    } catch {\n      toast.error('Erro na alteração de quantidade do produto');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addProduct,\n      removeProduct,\n      updateProductAmount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"Lx3em/tfLUac5pKDyUEwTSoHOXE=\");\n\n_c = CartProvider;\nexport function useCart() {\n  _s2();\n\n  const context = useContext(CartContext);\n  return context;\n}\n\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useState","toast","api","CartContext","CartProvider","children","cart","setCart","storagedCart","localStorage","getItem","JSON","parse","addProduct","productId","updatedCart","productExists","find","product","id","currentAmount","amount","get","newProduct","data","push","setItem","stringify","error","removeProduct","productIndex","findIndex","splice","Error","removeItem","updateProductAmount","useCart","context"],"sources":["/Users/evertonluis/jobs/liven-commerce/src/hooks/useCart.tsx"],"sourcesContent":["import { createContext, ReactNode, useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n  amount: number;\n}\ninterface CartContextData {\n  cart: Product[];\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<Product[]>(() => {\n    const storagedCart = localStorage.getItem('@Liven:cart');\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n      }\n\n    return [];\n  });\n\n  const addProduct = async (productId: number) => {\n    try {\n      //Get cart\n      const updatedCart = [...cart];\n      \n      //Check product productExists\n      const productExists = updatedCart.find(product => product.id === productId);\n\n      const currentAmount = productExists ? productExists.amount :0;\n      const amount = currentAmount + 1;\n\n      if (productExists) {\n        productExists.amount = amount;\n      }\n      else {\n        const product = await api.get(`/products/${productId}`);\n\n        const newProduct = {\n          ...product.data,\n          amount: 1\n        }\n        updatedCart.push(newProduct);\n      }\n      setCart(updatedCart);\n      localStorage.setItem('@Liven:cart', JSON.stringify(updatedCart));\n    } catch (error) {\n      toast.error('Erro na adição do produto');\n    }\n  };\n\n  const removeProduct = (productId: number) => {\n    try {\n      const updatedCart = [...cart];\n      const productIndex = updatedCart.findIndex(product => product.id === productId);\n\n      if(productIndex >=0) {\n        updatedCart.splice(productIndex, 1);\n        setCart(updatedCart);\n        localStorage.setItem('@Liven:cart', JSON.stringify(updatedCart));\n      } else {\n        throw Error();\n      }\n      localStorage.removeItem(JSON.stringify(productId));\n    } catch {\n      toast.error('Erro na remoção do produto');\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n  }: UpdateProductAmount) => {\n    try {\n      const updatedCart = [...cart];\n      const productExists = updatedCart.find(product => product.id === productId);\n      if (productExists) {\n        productExists.amount = amount;\n        setCart(updatedCart);\n        localStorage.setItem('@Liven:cart', JSON.stringify(updatedCart));\n      } else {\n        throw Error();\n      }\n\n    } catch {\n      toast.error('Erro na alteração de quantidade do produto');\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}